/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sunilvb.demo;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Order extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1821306562683181135L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Order\",\"namespace\":\"com.sunilvb.demo\",\"fields\":[{\"name\":\"order_id\",\"type\":\"string\",\"doc\":\"Id of the order filed\"},{\"name\":\"customer_id\",\"type\":\"string\",\"doc\":\"Id of the customer\"},{\"name\":\"supplier_id\",\"type\":\"string\",\"doc\":\"Id of the supplier\"},{\"name\":\"first_name\",\"type\":\"string\",\"doc\":\"First Name of Customer\"},{\"name\":\"last_name\",\"type\":\"string\",\"doc\":\"Last Name of Customer\"},{\"name\":\"items\",\"type\":\"int\",\"doc\":\"Totla number of items in the order\"},{\"name\":\"price\",\"type\":\"float\",\"doc\":\"Total price of the order\"},{\"name\":\"weight\",\"type\":\"float\",\"doc\":\"Weight of the items\"},{\"name\":\"automated_email\",\"type\":\"boolean\",\"doc\":\"Field indicating if the user is enrolled in marketing emails\",\"default\":true}],\"version\":\"1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Order> ENCODER =
      new BinaryMessageEncoder<Order>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Order> DECODER =
      new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Order> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Order> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Order to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Order from a ByteBuffer. */
  public static Order fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Id of the order filed */
  @Deprecated public java.lang.CharSequence order_id;
  /** Id of the customer */
  @Deprecated public java.lang.CharSequence customer_id;
  /** Id of the supplier */
  @Deprecated public java.lang.CharSequence supplier_id;
  /** First Name of Customer */
  @Deprecated public java.lang.CharSequence first_name;
  /** Last Name of Customer */
  @Deprecated public java.lang.CharSequence last_name;
  /** Totla number of items in the order */
  @Deprecated public int items;
  /** Total price of the order */
  @Deprecated public float price;
  /** Weight of the items */
  @Deprecated public float weight;
  /** Field indicating if the user is enrolled in marketing emails */
  @Deprecated public boolean automated_email;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Order() {}

  /**
   * All-args constructor.
   * @param order_id Id of the order filed
   * @param customer_id Id of the customer
   * @param supplier_id Id of the supplier
   * @param first_name First Name of Customer
   * @param last_name Last Name of Customer
   * @param items Totla number of items in the order
   * @param price Total price of the order
   * @param weight Weight of the items
   * @param automated_email Field indicating if the user is enrolled in marketing emails
   */
  public Order(java.lang.CharSequence order_id, java.lang.CharSequence customer_id, java.lang.CharSequence supplier_id, java.lang.CharSequence first_name, java.lang.CharSequence last_name, java.lang.Integer items, java.lang.Float price, java.lang.Float weight, java.lang.Boolean automated_email) {
    this.order_id = order_id;
    this.customer_id = customer_id;
    this.supplier_id = supplier_id;
    this.first_name = first_name;
    this.last_name = last_name;
    this.items = items;
    this.price = price;
    this.weight = weight;
    this.automated_email = automated_email;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return order_id;
    case 1: return customer_id;
    case 2: return supplier_id;
    case 3: return first_name;
    case 4: return last_name;
    case 5: return items;
    case 6: return price;
    case 7: return weight;
    case 8: return automated_email;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: order_id = (java.lang.CharSequence)value$; break;
    case 1: customer_id = (java.lang.CharSequence)value$; break;
    case 2: supplier_id = (java.lang.CharSequence)value$; break;
    case 3: first_name = (java.lang.CharSequence)value$; break;
    case 4: last_name = (java.lang.CharSequence)value$; break;
    case 5: items = (java.lang.Integer)value$; break;
    case 6: price = (java.lang.Float)value$; break;
    case 7: weight = (java.lang.Float)value$; break;
    case 8: automated_email = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'order_id' field.
   * @return Id of the order filed
   */
  public java.lang.CharSequence getOrderId() {
    return order_id;
  }

  /**
   * Sets the value of the 'order_id' field.
   * Id of the order filed
   * @param value the value to set.
   */
  public void setOrderId(java.lang.CharSequence value) {
    this.order_id = value;
  }

  /**
   * Gets the value of the 'customer_id' field.
   * @return Id of the customer
   */
  public java.lang.CharSequence getCustomerId() {
    return customer_id;
  }

  /**
   * Sets the value of the 'customer_id' field.
   * Id of the customer
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.CharSequence value) {
    this.customer_id = value;
  }

  /**
   * Gets the value of the 'supplier_id' field.
   * @return Id of the supplier
   */
  public java.lang.CharSequence getSupplierId() {
    return supplier_id;
  }

  /**
   * Sets the value of the 'supplier_id' field.
   * Id of the supplier
   * @param value the value to set.
   */
  public void setSupplierId(java.lang.CharSequence value) {
    this.supplier_id = value;
  }

  /**
   * Gets the value of the 'first_name' field.
   * @return First Name of Customer
   */
  public java.lang.CharSequence getFirstName() {
    return first_name;
  }

  /**
   * Sets the value of the 'first_name' field.
   * First Name of Customer
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.first_name = value;
  }

  /**
   * Gets the value of the 'last_name' field.
   * @return Last Name of Customer
   */
  public java.lang.CharSequence getLastName() {
    return last_name;
  }

  /**
   * Sets the value of the 'last_name' field.
   * Last Name of Customer
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.last_name = value;
  }

  /**
   * Gets the value of the 'items' field.
   * @return Totla number of items in the order
   */
  public java.lang.Integer getItems() {
    return items;
  }

  /**
   * Sets the value of the 'items' field.
   * Totla number of items in the order
   * @param value the value to set.
   */
  public void setItems(java.lang.Integer value) {
    this.items = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return Total price of the order
   */
  public java.lang.Float getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * Total price of the order
   * @param value the value to set.
   */
  public void setPrice(java.lang.Float value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'weight' field.
   * @return Weight of the items
   */
  public java.lang.Float getWeight() {
    return weight;
  }

  /**
   * Sets the value of the 'weight' field.
   * Weight of the items
   * @param value the value to set.
   */
  public void setWeight(java.lang.Float value) {
    this.weight = value;
  }

  /**
   * Gets the value of the 'automated_email' field.
   * @return Field indicating if the user is enrolled in marketing emails
   */
  public java.lang.Boolean getAutomatedEmail() {
    return automated_email;
  }

  /**
   * Sets the value of the 'automated_email' field.
   * Field indicating if the user is enrolled in marketing emails
   * @param value the value to set.
   */
  public void setAutomatedEmail(java.lang.Boolean value) {
    this.automated_email = value;
  }

  /**
   * Creates a new Order RecordBuilder.
   * @return A new Order RecordBuilder
   */
  public static com.sunilvb.demo.Order.Builder newBuilder() {
    return new com.sunilvb.demo.Order.Builder();
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Order RecordBuilder
   */
  public static com.sunilvb.demo.Order.Builder newBuilder(com.sunilvb.demo.Order.Builder other) {
    return new com.sunilvb.demo.Order.Builder(other);
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Order instance.
   * @param other The existing instance to copy.
   * @return A new Order RecordBuilder
   */
  public static com.sunilvb.demo.Order.Builder newBuilder(com.sunilvb.demo.Order other) {
    return new com.sunilvb.demo.Order.Builder(other);
  }

  /**
   * RecordBuilder for Order instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Order>
    implements org.apache.avro.data.RecordBuilder<Order> {

    /** Id of the order filed */
    private java.lang.CharSequence order_id;
    /** Id of the customer */
    private java.lang.CharSequence customer_id;
    /** Id of the supplier */
    private java.lang.CharSequence supplier_id;
    /** First Name of Customer */
    private java.lang.CharSequence first_name;
    /** Last Name of Customer */
    private java.lang.CharSequence last_name;
    /** Totla number of items in the order */
    private int items;
    /** Total price of the order */
    private float price;
    /** Weight of the items */
    private float weight;
    /** Field indicating if the user is enrolled in marketing emails */
    private boolean automated_email;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sunilvb.demo.Order.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.order_id)) {
        this.order_id = data().deepCopy(fields()[0].schema(), other.order_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customer_id)) {
        this.customer_id = data().deepCopy(fields()[1].schema(), other.customer_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.supplier_id)) {
        this.supplier_id = data().deepCopy(fields()[2].schema(), other.supplier_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.first_name)) {
        this.first_name = data().deepCopy(fields()[3].schema(), other.first_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.last_name)) {
        this.last_name = data().deepCopy(fields()[4].schema(), other.last_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.items)) {
        this.items = data().deepCopy(fields()[5].schema(), other.items);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.price)) {
        this.price = data().deepCopy(fields()[6].schema(), other.price);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.weight)) {
        this.weight = data().deepCopy(fields()[7].schema(), other.weight);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.automated_email)) {
        this.automated_email = data().deepCopy(fields()[8].schema(), other.automated_email);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Order instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sunilvb.demo.Order other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.order_id)) {
        this.order_id = data().deepCopy(fields()[0].schema(), other.order_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customer_id)) {
        this.customer_id = data().deepCopy(fields()[1].schema(), other.customer_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.supplier_id)) {
        this.supplier_id = data().deepCopy(fields()[2].schema(), other.supplier_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.first_name)) {
        this.first_name = data().deepCopy(fields()[3].schema(), other.first_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.last_name)) {
        this.last_name = data().deepCopy(fields()[4].schema(), other.last_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.items)) {
        this.items = data().deepCopy(fields()[5].schema(), other.items);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.price)) {
        this.price = data().deepCopy(fields()[6].schema(), other.price);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.weight)) {
        this.weight = data().deepCopy(fields()[7].schema(), other.weight);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.automated_email)) {
        this.automated_email = data().deepCopy(fields()[8].schema(), other.automated_email);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'order_id' field.
      * Id of the order filed
      * @return The value.
      */
    public java.lang.CharSequence getOrderId() {
      return order_id;
    }

    /**
      * Sets the value of the 'order_id' field.
      * Id of the order filed
      * @param value The value of 'order_id'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setOrderId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.order_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'order_id' field has been set.
      * Id of the order filed
      * @return True if the 'order_id' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'order_id' field.
      * Id of the order filed
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearOrderId() {
      order_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_id' field.
      * Id of the customer
      * @return The value.
      */
    public java.lang.CharSequence getCustomerId() {
      return customer_id;
    }

    /**
      * Sets the value of the 'customer_id' field.
      * Id of the customer
      * @param value The value of 'customer_id'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setCustomerId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.customer_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_id' field has been set.
      * Id of the customer
      * @return True if the 'customer_id' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customer_id' field.
      * Id of the customer
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearCustomerId() {
      customer_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'supplier_id' field.
      * Id of the supplier
      * @return The value.
      */
    public java.lang.CharSequence getSupplierId() {
      return supplier_id;
    }

    /**
      * Sets the value of the 'supplier_id' field.
      * Id of the supplier
      * @param value The value of 'supplier_id'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setSupplierId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.supplier_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'supplier_id' field has been set.
      * Id of the supplier
      * @return True if the 'supplier_id' field has been set, false otherwise.
      */
    public boolean hasSupplierId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'supplier_id' field.
      * Id of the supplier
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearSupplierId() {
      supplier_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'first_name' field.
      * First Name of Customer
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return first_name;
    }

    /**
      * Sets the value of the 'first_name' field.
      * First Name of Customer
      * @param value The value of 'first_name'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.first_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'first_name' field has been set.
      * First Name of Customer
      * @return True if the 'first_name' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'first_name' field.
      * First Name of Customer
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearFirstName() {
      first_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_name' field.
      * Last Name of Customer
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return last_name;
    }

    /**
      * Sets the value of the 'last_name' field.
      * Last Name of Customer
      * @param value The value of 'last_name'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.last_name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'last_name' field has been set.
      * Last Name of Customer
      * @return True if the 'last_name' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'last_name' field.
      * Last Name of Customer
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearLastName() {
      last_name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'items' field.
      * Totla number of items in the order
      * @return The value.
      */
    public java.lang.Integer getItems() {
      return items;
    }

    /**
      * Sets the value of the 'items' field.
      * Totla number of items in the order
      * @param value The value of 'items'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setItems(int value) {
      validate(fields()[5], value);
      this.items = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'items' field has been set.
      * Totla number of items in the order
      * @return True if the 'items' field has been set, false otherwise.
      */
    public boolean hasItems() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'items' field.
      * Totla number of items in the order
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearItems() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * Total price of the order
      * @return The value.
      */
    public java.lang.Float getPrice() {
      return price;
    }

    /**
      * Sets the value of the 'price' field.
      * Total price of the order
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setPrice(float value) {
      validate(fields()[6], value);
      this.price = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * Total price of the order
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'price' field.
      * Total price of the order
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearPrice() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'weight' field.
      * Weight of the items
      * @return The value.
      */
    public java.lang.Float getWeight() {
      return weight;
    }

    /**
      * Sets the value of the 'weight' field.
      * Weight of the items
      * @param value The value of 'weight'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setWeight(float value) {
      validate(fields()[7], value);
      this.weight = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'weight' field has been set.
      * Weight of the items
      * @return True if the 'weight' field has been set, false otherwise.
      */
    public boolean hasWeight() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'weight' field.
      * Weight of the items
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearWeight() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'automated_email' field.
      * Field indicating if the user is enrolled in marketing emails
      * @return The value.
      */
    public java.lang.Boolean getAutomatedEmail() {
      return automated_email;
    }

    /**
      * Sets the value of the 'automated_email' field.
      * Field indicating if the user is enrolled in marketing emails
      * @param value The value of 'automated_email'.
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder setAutomatedEmail(boolean value) {
      validate(fields()[8], value);
      this.automated_email = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'automated_email' field has been set.
      * Field indicating if the user is enrolled in marketing emails
      * @return True if the 'automated_email' field has been set, false otherwise.
      */
    public boolean hasAutomatedEmail() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'automated_email' field.
      * Field indicating if the user is enrolled in marketing emails
      * @return This builder.
      */
    public com.sunilvb.demo.Order.Builder clearAutomatedEmail() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Order build() {
      try {
        Order record = new Order();
        record.order_id = fieldSetFlags()[0] ? this.order_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.customer_id = fieldSetFlags()[1] ? this.customer_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.supplier_id = fieldSetFlags()[2] ? this.supplier_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.first_name = fieldSetFlags()[3] ? this.first_name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.last_name = fieldSetFlags()[4] ? this.last_name : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.items = fieldSetFlags()[5] ? this.items : (java.lang.Integer) defaultValue(fields()[5]);
        record.price = fieldSetFlags()[6] ? this.price : (java.lang.Float) defaultValue(fields()[6]);
        record.weight = fieldSetFlags()[7] ? this.weight : (java.lang.Float) defaultValue(fields()[7]);
        record.automated_email = fieldSetFlags()[8] ? this.automated_email : (java.lang.Boolean) defaultValue(fields()[8]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Order>
    WRITER$ = (org.apache.avro.io.DatumWriter<Order>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Order>
    READER$ = (org.apache.avro.io.DatumReader<Order>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
